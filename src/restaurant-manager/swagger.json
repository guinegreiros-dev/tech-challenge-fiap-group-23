{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "API - Tech Challenge",
    "description": "API - Tech Challenge"
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "paths": {
    "/customers/": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Returns a created customer.",
        "description": "This endpoint will return a customer json",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/customerBody"
              }
            }
          }
        }
      }
    },
    "/customers/{cpf}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Returns a customer when searching for cpf.",
        "description": "This endpoint will return a customer json when searching for cpf.",
        "parameters": [
          {
            "name": "cpf",
            "in": "path",
            "required": true,
            "default": "55395058087",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/products/": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Returns a created product.",
        "description": "This endpoint will return a product json.",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/productBody"
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Returns a boolean.",
        "description": "This endpoint will return a boolean for the deleted product.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": ["Product"],
        "summary": "Edit product.",
        "description": "This endpoint will edit the product with values of body request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Product ID."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/productEditBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/categories/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Returns the list of products by category.",
        "description": "This endpoint will return the list of products by category.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/orders/": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Returns the order by customer and by status.",
        "description": "This endpoint will return the order by customer and by status.",
        "parameters": [
          {
            "name": "customer_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_status",
            "in": "query",
            "required": false,
            "description": "Status for orders.",
            "schema": {
              "$ref": "#/components/schemas/orderStatusEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Returns a created order.",
        "description": "This endpoint will return a order json.",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/orderBody"
              }
            }
          }
        }
      }
    },
    "/orders/open-payments": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Returns the orders IDs with waiting payment status to weebhook check",
        "description": "Returns all orders IDs that have payment status open",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/orders/all": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Returns orders in a specific order",
        "description": "Returns an order list orderned by asceding date and Pronto, Em preparação, Recebido status. Without Finalizado status",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Returns a order by Id.",
        "description": "This endpoint will return a order by Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/orders/{id}/status": {
      "put": {
        "tags": [
          "Order"
        ],
        "summary": "Returns the order status change.",
        "description": "This endpoint will return the order status change.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/orderEditStatusBody"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "customerBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Frederico"
          },
          "cpf": {
            "type": "string",
            "example": "55395058087"
          },
          "email": {
            "type": "string",
            "example": "teste@email.com"
          },
          "created_at": {
            "type": "string",
            "example": "2024-05-28T01:25:58.453Z"
          }
        },
        "required": [
          "name",
          "cpf",
          "email"
        ]
      },
      "customerResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Frederico"
          },
          "cpf": {
            "type": "string",
            "example": "55395058087"
          },
          "email": {
            "type": "string",
            "example": "teste@email.com"
          },
          "created_at": {
            "type": "string",
            "example": "2024-05-28T01:25:58.453Z"
          }
        }
      },
      "productBody": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "string",
            "format": "smallint",
            "description": "Enum values: 1: lanche, 2: acompanhamento, 3: bebida, 4: sobremesa",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "lanche"
          },
          "description": {
            "type": "string",
            "example": "descrição"
          },
          "price": {
            "type": "string",
            "example": 30.5
          },
          "image": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": [
          "categoryId",
          "name",
          "price"
        ]
      },
      "productEditBody": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "string",
            "format": "smallint",
            "description": "Enum values: 1: lanche, 2: acompanhamento, 3: bebida, 4: sobremesa",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "lanche"
          },
          "description": {
            "type": "string",
            "example": "descrição"
          },
          "price": {
            "type": "string",
            "example": 30.5
          },
          "image": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "producResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "categoryId": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "lanche"
          },
          "description": {
            "type": "string",
            "example": "descrição"
          },
          "price": {
            "type": "number",
            "example": 30.5
          },
          "image": {
            "type": "string",
            "example": "bytea.jpeg"
          },
          "created_at": {
            "type": "string",
            "example": "2024-05-28T01:25:58.453Z"
          },
          "updated_at": {
            "type": "string",
            "example": "2024-05-28T01:25:58.453Z"
          }
        }
      },
      "orderBody": {
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "number",
            "example": 1
          },
          "command": {
            "type": "number",
            "example": 2
          },
          "order_status": {
            "type": "string",
            "example": "pagamento pendente"
          },
          "total_price": {
            "type": "number",
            "example": 30.5
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "product_id": {
                  "type": "number",
                  "example": 1
                },
                "quantity": {
                  "type": "number",
                  "example": 1
                },
                "product_name": {
                  "type": "string",
                  "example": "lanche"
                },
                "price": {
                  "type": "number",
                  "example": 30.5
                },
                "notes": {
                  "type": "string",
                  "example": ""
                }
              }
            }
          },
          "orderUpdatedAt": {
            "type": "string",
            "example": "2024-05-28T01:25:58.453Z"
          },
          "createdAt": {
            "type": "string",
            "example": "2024-05-28T01:28:58.453Z"
          }
        },
        "required": [
          "customer_id",
          "command",
          "order_status",
          "total_price",
          "items",
          "orderUpdatedAt",
          "createdAt"
        ]
      },
      "orderResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "customer_id": {
            "type": "number",
            "example": 1
          },
          "command": {
            "type": "number",
            "example": 2
          },
          "order_status": {
            "type": "string",
            "example": "recebido"
          },
          "total_price": {
            "type": "number",
            "example": 30.5
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "product_id": {
                  "type": "number",
                  "example": 1
                },
                "quantity": {
                  "type": "number",
                  "example": 1
                },
                "product_name": {
                  "type": "string",
                  "example": "lanche"
                },
                "price": {
                  "type": "number",
                  "example": 30.5
                },
                "notes": {
                  "type": "string",
                  "example": ""
                }
              }
            }
          },
          "orderUpdatedAt": {
            "type": "array",
            "status": {
              "type": "string",
              "example": "recebido"
            },
            "updatedAt": {
              "type": "string",
              "example": "2024-05-28T02:55:00.494Z"
            }
          },
          "createdAt": {
            "type": "string",
            "example": "2024-05-28T01:28:58.453Z"
          }
        },
        "required": [
          "customer_id",
          "command",
          "order_status",
          "total_price",
          "items",
          "orderUpdatedAt",
          "createdAt"
        ]
      },
      "orderEditStatusBody": {
        "type": "object",
        "properties": {
          "order_status": {
            "type": "string",
            "description": "Enum values: recebido, em preparação, pronto, finalizado",
            "enum": [
              "recebido",
              "em preparação",
              "pronto",
              "finalizado"
            ]
          }
        }
      },
      "orderStatusEnum": {
        "type": "string",
        "enum": [
          "pagamento pendente",
          "recebido",
          "em preparação",
          "pronto",
          "finalizado"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
